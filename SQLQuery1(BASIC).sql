--CREATE TABLE EMPLOYEEDEMOGRAPHICS
--(EMPLOYEEID INT,
--FIRSTNAME VARCHAR(50),
--LASTNAME VARCHAR(50),
--AGE INT,
--GENDER VARCHAR(50)
--)

--INSERT INTO EMPLOYEEDEMOGRAPHICS VALUES
--(1001, 'Jim', 'Halpert', 30, 'Male'),
--(1002, 'Pam', 'Beasley', 30, 'Female'),
--(1003, 'Dwight', 'Schrute', 29, 'Male'),
--(1004, 'Angela', 'Martin', 31, 'Female'),
--(1005, 'Toby', 'Flenderson', 32, 'Male'),
--(1006, 'Michael', 'Scott', 35, 'Male'),
--(1007, 'Meredith', 'Palmer', 32, 'Female'),
--(1008, 'Stanley', 'Hudson', 38, 'Male'),
--(1009, 'Kevin', 'Malone', 31, 'Male')

--SELECT *
-- FROM EMPLOYEEDEMOGRAPHICS

--SELECT TOP 5 *
-- FROM EMPLOYEEDEMOGRAPHICS

--SELECT DISTINCT(EMPLOYEEID)
-- FROM EMPLOYEEDEMOGRAPHICS


--SELECT DISTINCT(GENDER)
-- FROM EMPLOYEEDEMOGRAPHICS


--SELECT COUNT(LASTNAME)
-- FROM EMPLOYEEDEMOGRAPHICS


--SELECT COUNT(LASTNAME) AS LASTNAMECOUNT
-- FROM EMPLOYEEDEMOGRAPHICS

--SELECT MAX(SALARY)
--FROM Employeesalary

--SELECT AVG(SALARY)
--FROM Employeesalary

--SELECT *
--FROM [SQL TUTORIAL].Dbo.Employeesalary
        --THIS IS TO SELECT DATABASE

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE FIRSTNAME = 'JIM'

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE FIRSTNAME <> 'JIM'
--<> SIGN FOR NOT EQUAL

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE >= 30

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE <= 32 AND GENDER = 'MALE'

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE <= 32 OR GENDER = 'MALE'

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE LASTNAME LIKE 'S%'
--    LASTNAME STRAT WITH S
--	IF USE %S% THEN LAST NAME CONTAINING LETTER S ANYWHERE

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE FIRSTNAME IS NOT NULL

--SELECT *
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE FIRSTNAME IN ('JIM', 'MICHAEL')

--SELECT GENDER, COUNT(GENDER)
--FROM EMPLOYEEDEMOGRAPHICS
--GROUP BY GENDER

--SELECT  GENDER, AGE, COUNT(GENDER)
--FROM EMPLOYEEDEMOGRAPHICS
--GROUP BY GENDER, AGE

--SELECT GENDER, COUNT(GENDER)
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE > 31
--GROUP BY GENDER

--SELECT GENDER, COUNT(GENDER) AS COUNTGENDER
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE > 31
--GROUP BY GENDER
--ORDER BY COUNTGENDER DESC


--SELECT GENDER, COUNT(GENDER) AS COUNTGENDER
--FROM EMPLOYEEDEMOGRAPHICS
--WHERE AGE > 31
--GROUP BY GENDER
--ORDER BY GENDER
 
 --SELECT *
 --FROM EMPLOYEEDEMOGRAPHICS
 --ORDER BY AGE DESC

 --SELECT *
 --FROM EMPLOYEEDEMOGRAPHICS
 --ORDER BY AGE, GENDER

 -- SELECT *
 --FROM EMPLOYEEDEMOGRAPHICS
 --ORDER BY AGE DESC, GENDER DESC

 -- SELECT *
 --FROM EMPLOYEEDEMOGRAPHICS
 --ORDER BY 4 DESC, 5 DESC
 --   IT WILL SELECT COLUMN 4&5 IN DESCENDING ORDER

 -- SELECT *
 --FROM EMPLOYEEDEMOGRAPHICS
 --WHERE AGE < 35
 --ORDER BY AGE, GENDER